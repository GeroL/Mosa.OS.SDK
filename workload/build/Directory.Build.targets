<Project>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Arcade.Sdk" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" PrivateAssets="all" GeneratePathProperty="true" />
  </ItemGroup>

  <Import Project="..\src\Samsung.Tizen.Build.PrepTasks\PrepTasks.targets" />
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.SharedFramework.Sdk" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" />

  <UsingTask TaskName="CreateFrameworkListFile" AssemblyFile="$(DotNetSharedFrameworkTaskFile)"/>

  <PropertyGroup>
    <_DotNetTargetPath Condition="'$(DotNetTargetPath)' != ''">$(DotNetTargetPath)</_DotNetTargetPath>
    <_DotNetTargetPath Condition="'$(DotNetTargetPath)' == ''">$(_DefaultDotNetTargetPath)</_DotNetTargetPath>
    <_DotNetTargetPath>$([MSBuild]::EnsureTrailingSlash($(_DotNetTargetPath)))</_DotNetTargetPath>
  </PropertyGroup>

  <PropertyGroup>
    <_DotNetTargetVersion Condition="'$(DotNetTargetVersion)' != ''">$(DotNetTargetVersion)</_DotNetTargetVersion>
    <_DotNetTargetVersion Condition="'$(DotNetTargetVersion)' == ''">$(_DefaultDotnetTargetVersion)</_DotNetTargetVersion>

    <!-- Trim all characters after first `-` or `+` is encountered. -->
    <DotNetPreviewVersionBand Condition=" '$(DotNetPreviewVersionBand)' == '' ">$([System.Text.RegularExpressions.Regex]::Replace($(_DotNetTargetVersion), `[-+].*$`, ""))</DotNetPreviewVersionBand>
  </PropertyGroup>

  <PropertyGroup>
    <_WorkloadResolverFlagFile>$(_DotNetTargetPath)sdk\$(_DotNetTargetVersion)\EnableWorkloadResolver.sentinel</_WorkloadResolverFlagFile>
  </PropertyGroup>

  <PropertyGroup>
    <NuGetLicense Condition=" '$(NuGetLicense)' == '' ">..\LICENSE</NuGetLicense>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
  </PropertyGroup>

  <Target Name="_GetPackageVersion">
    <Error Condition="'$(TizenPackVersion)' == ''" Text="TizenPackVersion property is not set." />
    <PropertyGroup>
      <PackageVersion Condition="'$(TizenVersionHash)' != ''">$(TizenPackVersion)+sha.$(TizenVersionHash)</PackageVersion>
      <PackageVersion Condition="'$(TizenVersionHash)' == ''">$(TizenPackVersion)</PackageVersion>
    </PropertyGroup>
  </Target>

  <!-- https://github.com/xamarin/xamarin-android/blob/c703fa9431894132619e50e04a04eb3543b1f62f/build-tools/create-packs/Directory.Build.targets#L27 -->
  <Target Name="_GetLicense">
    <!-- NuGet doesn't have a way to change the filename of License.txt, so copy it -->
    <Copy
        SourceFiles="$(NuGetLicense)"
        DestinationFiles="$(IntermediateOutputPath)$(PackageLicenseFile)"
        SkipUnchangedFiles="true"
    />
    <ItemGroup>
      <_PackageFiles Include="$(IntermediateOutputPath)$(PackageLicenseFile)" PackagePath="\" />
    </ItemGroup>
  </Target>

  <!-- https://github.com/dotnet/runtime/blob/0647ec314948904319da5eb15e9931f7c85ed1e2/src/installer/pkg/projects/Directory.Build.targets#L281 -->
  <Target Name="_GenerateFrameworkListFile" >
    <!-- Hardcode framework attributes -->
    <ItemGroup>
      <FrameworkListRootAttributes Include="Name" Value=".NET 6.0 - Tizen" />
      <FrameworkListRootAttributes Include="TargetFrameworkIdentifier" Value=".NETCoreApp" />
      <FrameworkListRootAttributes Include="TargetFrameworkVersion" Value="6.0" />
      <FrameworkListRootAttributes Include="FrameworkName" Value="Samsung.Tizen" />
    </ItemGroup>

    <!-- https://github.com/dotnet/arcade/blob/5824baf1c9a900ee00c167f96201c750bba6a574/src/Microsoft.DotNet.SharedFramework.Sdk/src/CreateFrameworkListFile.cs -->
    <CreateFrameworkListFile
        Files="@(_PackageFiles)"
        FileClassifications="@(FrameworkListFileClass)"
        TargetFile="$(FrameworkListFile)"
        TargetFilePrefixes="ref;runtimes"
        RootAttributes="@(FrameworkListRootAttributes)"
    />
    <ItemGroup>
      <_PackageFiles Include="$(FrameworkListFile)" PackagePath="data" />
    </ItemGroup>
  </Target>

  <Target Name="ExtractWorkloadPacks" DependsOnTargets="DeleteExtractedWorkloadPacks" >
    <ItemGroup>
      <_WLManifest Include="$(OutputPath)Samsung.NET.Workload.Tizen.*.nupkg" />
      <_WLPacks Include="$(OutputPath)Samsung.Tizen.Sdk.*.nupkg" />
      <_WLPacks Include="$(OutputPath)Samsung.Tizen.Ref.*.nupkg" />
      <_WLTemplates Include="$(OutputPath)Samsung.Tizen.Templates.*.nupkg" />
    </ItemGroup>

    <PropertyGroup>
      <_WLPackVersion>@(_WLManifest->'%(Filename)'->Replace('Samsung.NET.Workload.Tizen.', ''))</_WLPackVersion>
    </PropertyGroup>

    <Unzip
        SourceFiles="@(_WLManifest)"
        DestinationFolder="$(_DotNetTargetPath)sdk-manifests\$(DotNetPreviewVersionBand)\Samsung.NET.Workload.Tizen"
    />
    <Unzip
        SourceFiles="@(_WLPacks)"
        DestinationFolder="$(_DotNetTargetPath)packs\$([System.String]::Copy('%(_WLPacks.Filename)').Replace('.$(_WLPackVersion)', ''))\$(_WLPackVersion)"
    />
    <Copy SourceFiles="@(_WLTemplates)" DestinationFolder="$(_DotNetTargetPath)template-packs" />

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName ($(_WorkloadResolverFlagFile)))" />
    <Touch
        Files="$(_WorkloadResolverFlagFile)"
        AlwaysCreate="true"
    />
  </Target>

  <Target Name="DeleteExtractedWorkloadPacks" >
    <ItemGroup>
      <_PackFilesToDelete Include="$(_DotNetTargetPath)sdk-manifests\$(DotNetPreviewVersionBand)\Samsung.NET.Workload.Tizen\**\*.*" />
      <_PackFilesToDelete Include="$(_DotNetTargetPath)packs\Samsung.Tizen.*\**\*.*" />
      <_PackFilesToDelete Include="$(_DotNetTargetPath)template-packs\Samsung.Tizen.Templates.*.nupkg" />
    </ItemGroup>
    <RemoveDir Directories="%(_PackFilesToDelete.RootDir)%(_PackFilesToDelete.Directory)" />
    <Delete Files="$(_WorkloadResolverFlagFile)" />
  </Target>

</Project>