<!--
***********************************************************************************************
Tizen.NET.APILevelInference.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) Samsung All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <Target Name="__ResolveTizenPlatformPackageMoniker" BeforeTargets="FilterPublishAssembliesForTizen_Workaround">
    <ItemGroup>
      <TizenNetPackageReference Include="@(PackageReference)" Condition="'%(Identity)' == 'Tizen.NET'"/>
    </ItemGroup>

    <PropertyGroup>
      <TizenPlatformPackageId>%(TizenNetPackageReference.Identity)</TizenPlatformPackageId>
      <TizenPlatformPackageVersion>%(TizenNetPackageReference.Version)</TizenPlatformPackageVersion>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(TizenPlatformPackageId)' != '' and '$(TizenPlatformPackageVersion)' != '' ">
      <TizenPlatformPackageMoniker>$(TizenPlatformPackageId)/$(TizenPlatformPackageVersion)</TizenPlatformPackageMoniker>
    </PropertyGroup>
  </Target>

  <Target Name="__ResolveTizenPlatformPackages"
          DependsOnTargets="RunResolvePackageDependencies;__ResolveTizenPlatformPackageMoniker"
          Condition=" '$(TizenPlatformPackageMoniker)' != '' ">
    <ItemGroup>
      <TizenPlatformPackage Include="@(PackageDependencies)" Condition="'%(ParentPackage)' == '$(TizenPlatformPackageMoniker)'" />
    </ItemGroup>
  </Target>

  <Target Name="__ResolveTizenPlatformAssemblies"
          DependsOnTargets="__ResolveTizenPlatformPackages;RunResolvePackageDependencies"
  	      Inputs="@(TizenPlatformPackage)" Outputs="%(Identity)">
    <PropertyGroup>
      <_ParentPackage>%(TizenPlatformPackage.Identity)</_ParentPackage>
    </PropertyGroup>
    <ItemGroup>
      <TizenPlatformAssembly Include="@(FileDependencies)"
	                           Condition="'%(ParentPackage)' == '$(_ParentPackage)' and '%(FileDependencies.FileGroup)' == 'RuntimeAssembly'" />
    </ItemGroup>
  </Target>

  <Target Name="__ComputeTizenAssembliesToRemove"
          DependsOnTargets="RunResolvePublishAssemblies"
      	  Inputs="@(TizenPlatformAssembly)" Outputs="%(Identity)">
    <PropertyGroup>
      <_AssemblyFileName>%(TizenPlatformAssembly.Filename)</_AssemblyFileName>
    </PropertyGroup>
    <ItemGroup>
      <_TizenAssemblyToRemove Include="@(ResolvedAssembliesToPublish)" Condition=" '%(Filename)' == '$(_AssemblyFileName)' " />
    </ItemGroup>
  </Target>

  <!--
    ====================================================================================
    FilterPublishAssembliesForTizen_Workaround

    This is a workaround solution.
    Originally, if a higher version of the package is referenced than the one included in
    Tizen.NET platform package, it should be published. However current runtime implementation
    of Tizen platform doesn't allow the replacement assemblies at runtime.
    Therefore, this target removes all assemblies included in Tizen.NET, regardless of version.
    ====================================================================================
  -->
  <Target Name="FilterPublishAssembliesForTizen_Workaround"
          DependsOnTargets="__ResolveTizenPlatformPackageMoniker;__ResolveTizenPlatformPackages;__ResolveTizenPlatformAssemblies;__ComputeTizenAssembliesToRemove"
          BeforeTargets="ComputeFilesToPublish">
    <ItemGroup>
      <ResolvedAssembliesToPublish Remove="@(_TizenAssemblyToRemove)" />
    </ItemGroup>
  </Target>


  <!--
    ====================================================================================
    RunResolvePublishAssembliesForTizen

    Gets the assemblies not included in the Tizen platform package (Tizen.NET).
    ====================================================================================
  -->
  <Target Name="RunResolvePublishAssembliesForTizen">
    <ResolvePublishAssemblies ProjectPath="$(MSBuildProjectFullPath)"
                              AssetsFilePath="$(ProjectAssetsFile)"
                              TargetFramework="$(TargetFrameworkMoniker)"
                              RuntimeIdentifier="$(RuntimeIdentifier)"
                              PlatformLibraryName="$(TizenPlatformPackageId)">
      <Output TaskParameter="AssembliesToPublish" ItemName="ResolvedTizenAssembliesToPublish" />
    </ResolvePublishAssemblies>
  </Target>

  <!--
    ====================================================================================
    FilterPublishAssembliesForTizen

    Gets the filtered assemblies to be copied to the publish directory for Tizen
    ====================================================================================
  -->
  <Target Name="FilterPublishAssembliesForTizen"
          DependsOnTargets="__ResolveTizenPlatformPackageMoniker;RunResolvePublishAssembliesForTizen;RunResolvePublishAssemblies"
          BeforeTargets="ComputeFilesToPublish;_ComputeNetPublishAssets">

    <ItemGroup>
      <__ResolvedTizenAssembliesToRemove
          Include="@(ResolvedAssembliesToPublish)"
          Condition="'@(ResolvedTizenAssembliesToPublish)' != '@(ResolvedAssembliesToPublish)' and '%(Identity)' != '' " />

      <ResolvedAssembliesToPublish Remove="@(__ResolvedTizenAssembliesToRemove)" />
    </ItemGroup>
  </Target>

</Project>
